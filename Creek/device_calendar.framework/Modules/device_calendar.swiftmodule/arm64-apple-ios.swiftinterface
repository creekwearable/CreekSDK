// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name device_calendar
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -interface-compiler-version 6.1.2
import EventKit
import EventKitUI
import Flutter
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import device_calendar
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor @preconcurrency public class SwiftDeviceCalendarPlugin : ObjectiveC.NSObject, Flutter.FlutterPlugin, EventKitUI.EKEventViewDelegate, UIKit.UINavigationControllerDelegate {
  @_Concurrency.MainActor @preconcurrency @objc public static func register(with registrar: any Flutter.FlutterPluginRegistrar)
  @_Concurrency.MainActor @preconcurrency @objc public func handle(_ call: Flutter.FlutterMethodCall, result: @escaping Flutter.FlutterResult)
  @_Concurrency.MainActor @preconcurrency @objc public func eventViewController(_ controller: EventKitUI.EKEventViewController, didCompleteWith action: EventKitUI.EKEventViewAction)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init()
  @objc deinit
}
extension UIKit.UIColor {
  convenience public init?(hex: Swift.String)
}
extension device_calendar.SwiftDeviceCalendarPlugin : Swift.Sendable {}

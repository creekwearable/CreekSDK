// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: appList.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct protocol_app_list_operate: Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  ///1bytes 操作类型 0：无效操作 1：查询 2：设置
  public var operate: operate_type = .invalid

  public var list: [app_list] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}
}

public struct protocol_app_list_inquire_reply: @unchecked Sendable {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  ///1bytes 操作类型 0：无效操作 1：查询 2：设置
  public var operate: operate_type {
    get {return _storage._operate}
    set {_uniqueStorage()._operate = newValue}
  }

  public var funcTable: UInt32 {
    get {return _storage._funcTable}
    set {_uniqueStorage()._funcTable = newValue}
  }

  ///1bytes 应用列表显示数量
  public var supportShowNum: UInt32 {
    get {return _storage._supportShowNum}
    set {_uniqueStorage()._supportShowNum = newValue}
  }

  public var list: [app_list] {
    get {return _storage._list}
    set {_uniqueStorage()._list = newValue}
  }

  public var appListActivitySupport: Bool {
    get {return _storage._appListActivitySupport}
    set {_uniqueStorage()._appListActivitySupport = newValue}
  }

  public var appListWorkoutSupport: Bool {
    get {return _storage._appListWorkoutSupport}
    set {_uniqueStorage()._appListWorkoutSupport = newValue}
  }

  public var appListStepsSupport: Bool {
    get {return _storage._appListStepsSupport}
    set {_uniqueStorage()._appListStepsSupport = newValue}
  }

  ///心率
  public var appListHeartrateSupport: Bool {
    get {return _storage._appListHeartrateSupport}
    set {_uniqueStorage()._appListHeartrateSupport = newValue}
  }

  ///睡眠
  public var appListSleepSupport: Bool {
    get {return _storage._appListSleepSupport}
    set {_uniqueStorage()._appListSleepSupport = newValue}
  }

  ///压力
  public var appListStressSupport: Bool {
    get {return _storage._appListStressSupport}
    set {_uniqueStorage()._appListStressSupport = newValue}
  }

  ///女性健康
  public var appListMenstruationSupport: Bool {
    get {return _storage._appListMenstruationSupport}
    set {_uniqueStorage()._appListMenstruationSupport = newValue}
  }

  ///呼吸训练
  public var appListBreatheSupport: Bool {
    get {return _storage._appListBreatheSupport}
    set {_uniqueStorage()._appListBreatheSupport = newValue}
  }

  ///闹钟
  public var appListAlarmsSupport: Bool {
    get {return _storage._appListAlarmsSupport}
    set {_uniqueStorage()._appListAlarmsSupport = newValue}
  }

  ///电话
  public var appListPhoneSupport: Bool {
    get {return _storage._appListPhoneSupport}
    set {_uniqueStorage()._appListPhoneSupport = newValue}
  }

  ///倒计时
  public var appListTimersSupport: Bool {
    get {return _storage._appListTimersSupport}
    set {_uniqueStorage()._appListTimersSupport = newValue}
  }

  ///秒表
  public var appListStopwatchSupport: Bool {
    get {return _storage._appListStopwatchSupport}
    set {_uniqueStorage()._appListStopwatchSupport = newValue}
  }

  ///血氧
  public var appListSpo2Support: Bool {
    get {return _storage._appListSpo2Support}
    set {_uniqueStorage()._appListSpo2Support = newValue}
  }

  ///天气
  public var appListWeatherSupport: Bool {
    get {return _storage._appListWeatherSupport}
    set {_uniqueStorage()._appListWeatherSupport = newValue}
  }

  ///相机控制
  public var appListCameraRemoteSupport: Bool {
    get {return _storage._appListCameraRemoteSupport}
    set {_uniqueStorage()._appListCameraRemoteSupport = newValue}
  }

  ///音乐控制
  public var appListMusicSupport: Bool {
    get {return _storage._appListMusicSupport}
    set {_uniqueStorage()._appListMusicSupport = newValue}
  }

  ///寻找手机
  public var appListFindPhoneSupport: Bool {
    get {return _storage._appListFindPhoneSupport}
    set {_uniqueStorage()._appListFindPhoneSupport = newValue}
  }

  ///世界时钟
  public var appListWorldClockSupport: Bool {
    get {return _storage._appListWorldClockSupport}
    set {_uniqueStorage()._appListWorldClockSupport = newValue}
  }

  ///设置
  public var appListSettingsSupport: Bool {
    get {return _storage._appListSettingsSupport}
    set {_uniqueStorage()._appListSettingsSupport = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension protocol_app_list_operate: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = "protocol_app_list_operate"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "operate"),
    2: .same(proto: "list"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularEnumField(value: &self.operate) }()
      case 2: try { try decoder.decodeRepeatedEnumField(value: &self.list) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.operate != .invalid {
      try visitor.visitSingularEnumField(value: self.operate, fieldNumber: 1)
    }
    if !self.list.isEmpty {
      try visitor.visitPackedEnumField(value: self.list, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: protocol_app_list_operate, rhs: protocol_app_list_operate) -> Bool {
    if lhs.operate != rhs.operate {return false}
    if lhs.list != rhs.list {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension protocol_app_list_inquire_reply: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = "protocol_app_list_inquire_reply"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "operate"),
    2: .standard(proto: "func_table"),
    3: .standard(proto: "support_show_num"),
    4: .same(proto: "list"),
    5: .standard(proto: "app_list_activity_support"),
    6: .standard(proto: "app_list_workout_support"),
    7: .standard(proto: "app_list_steps_support"),
    8: .standard(proto: "app_list_heartrate_support"),
    9: .standard(proto: "app_list_sleep_support"),
    10: .standard(proto: "app_list_stress_support"),
    11: .standard(proto: "app_list_menstruation_support"),
    12: .standard(proto: "app_list_breathe_support"),
    13: .standard(proto: "app_list_alarms_support"),
    14: .standard(proto: "app_list_phone_support"),
    15: .standard(proto: "app_list_timers_support"),
    16: .standard(proto: "app_list_stopwatch_support"),
    17: .standard(proto: "app_list_spo2_support"),
    18: .standard(proto: "app_list_weather_support"),
    19: .standard(proto: "app_list_camera_remote_support"),
    20: .standard(proto: "app_list_music_support"),
    21: .standard(proto: "app_list_find_phone_support"),
    22: .standard(proto: "app_list_world_clock_support"),
    23: .standard(proto: "app_list_settings_support"),
  ]

  fileprivate class _StorageClass {
    var _operate: operate_type = .invalid
    var _funcTable: UInt32 = 0
    var _supportShowNum: UInt32 = 0
    var _list: [app_list] = []
    var _appListActivitySupport: Bool = false
    var _appListWorkoutSupport: Bool = false
    var _appListStepsSupport: Bool = false
    var _appListHeartrateSupport: Bool = false
    var _appListSleepSupport: Bool = false
    var _appListStressSupport: Bool = false
    var _appListMenstruationSupport: Bool = false
    var _appListBreatheSupport: Bool = false
    var _appListAlarmsSupport: Bool = false
    var _appListPhoneSupport: Bool = false
    var _appListTimersSupport: Bool = false
    var _appListStopwatchSupport: Bool = false
    var _appListSpo2Support: Bool = false
    var _appListWeatherSupport: Bool = false
    var _appListCameraRemoteSupport: Bool = false
    var _appListMusicSupport: Bool = false
    var _appListFindPhoneSupport: Bool = false
    var _appListWorldClockSupport: Bool = false
    var _appListSettingsSupport: Bool = false

      // This property is used as the initial default value for new instances of the type.
      // The type itself is protecting the reference to its storage via CoW semantics.
      // This will force a copy to be made of this reference when the first mutation occurs;
      // hence, it is safe to mark this as `nonisolated(unsafe)`.
      static nonisolated(unsafe) let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _operate = source._operate
      _funcTable = source._funcTable
      _supportShowNum = source._supportShowNum
      _list = source._list
      _appListActivitySupport = source._appListActivitySupport
      _appListWorkoutSupport = source._appListWorkoutSupport
      _appListStepsSupport = source._appListStepsSupport
      _appListHeartrateSupport = source._appListHeartrateSupport
      _appListSleepSupport = source._appListSleepSupport
      _appListStressSupport = source._appListStressSupport
      _appListMenstruationSupport = source._appListMenstruationSupport
      _appListBreatheSupport = source._appListBreatheSupport
      _appListAlarmsSupport = source._appListAlarmsSupport
      _appListPhoneSupport = source._appListPhoneSupport
      _appListTimersSupport = source._appListTimersSupport
      _appListStopwatchSupport = source._appListStopwatchSupport
      _appListSpo2Support = source._appListSpo2Support
      _appListWeatherSupport = source._appListWeatherSupport
      _appListCameraRemoteSupport = source._appListCameraRemoteSupport
      _appListMusicSupport = source._appListMusicSupport
      _appListFindPhoneSupport = source._appListFindPhoneSupport
      _appListWorldClockSupport = source._appListWorldClockSupport
      _appListSettingsSupport = source._appListSettingsSupport
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch fieldNumber {
        case 1: try { try decoder.decodeSingularEnumField(value: &_storage._operate) }()
        case 2: try { try decoder.decodeSingularUInt32Field(value: &_storage._funcTable) }()
        case 3: try { try decoder.decodeSingularUInt32Field(value: &_storage._supportShowNum) }()
        case 4: try { try decoder.decodeRepeatedEnumField(value: &_storage._list) }()
        case 5: try { try decoder.decodeSingularBoolField(value: &_storage._appListActivitySupport) }()
        case 6: try { try decoder.decodeSingularBoolField(value: &_storage._appListWorkoutSupport) }()
        case 7: try { try decoder.decodeSingularBoolField(value: &_storage._appListStepsSupport) }()
        case 8: try { try decoder.decodeSingularBoolField(value: &_storage._appListHeartrateSupport) }()
        case 9: try { try decoder.decodeSingularBoolField(value: &_storage._appListSleepSupport) }()
        case 10: try { try decoder.decodeSingularBoolField(value: &_storage._appListStressSupport) }()
        case 11: try { try decoder.decodeSingularBoolField(value: &_storage._appListMenstruationSupport) }()
        case 12: try { try decoder.decodeSingularBoolField(value: &_storage._appListBreatheSupport) }()
        case 13: try { try decoder.decodeSingularBoolField(value: &_storage._appListAlarmsSupport) }()
        case 14: try { try decoder.decodeSingularBoolField(value: &_storage._appListPhoneSupport) }()
        case 15: try { try decoder.decodeSingularBoolField(value: &_storage._appListTimersSupport) }()
        case 16: try { try decoder.decodeSingularBoolField(value: &_storage._appListStopwatchSupport) }()
        case 17: try { try decoder.decodeSingularBoolField(value: &_storage._appListSpo2Support) }()
        case 18: try { try decoder.decodeSingularBoolField(value: &_storage._appListWeatherSupport) }()
        case 19: try { try decoder.decodeSingularBoolField(value: &_storage._appListCameraRemoteSupport) }()
        case 20: try { try decoder.decodeSingularBoolField(value: &_storage._appListMusicSupport) }()
        case 21: try { try decoder.decodeSingularBoolField(value: &_storage._appListFindPhoneSupport) }()
        case 22: try { try decoder.decodeSingularBoolField(value: &_storage._appListWorldClockSupport) }()
        case 23: try { try decoder.decodeSingularBoolField(value: &_storage._appListSettingsSupport) }()
        default: break
        }
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._operate != .invalid {
        try visitor.visitSingularEnumField(value: _storage._operate, fieldNumber: 1)
      }
      if _storage._funcTable != 0 {
        try visitor.visitSingularUInt32Field(value: _storage._funcTable, fieldNumber: 2)
      }
      if _storage._supportShowNum != 0 {
        try visitor.visitSingularUInt32Field(value: _storage._supportShowNum, fieldNumber: 3)
      }
      if !_storage._list.isEmpty {
        try visitor.visitPackedEnumField(value: _storage._list, fieldNumber: 4)
      }
      if _storage._appListActivitySupport != false {
        try visitor.visitSingularBoolField(value: _storage._appListActivitySupport, fieldNumber: 5)
      }
      if _storage._appListWorkoutSupport != false {
        try visitor.visitSingularBoolField(value: _storage._appListWorkoutSupport, fieldNumber: 6)
      }
      if _storage._appListStepsSupport != false {
        try visitor.visitSingularBoolField(value: _storage._appListStepsSupport, fieldNumber: 7)
      }
      if _storage._appListHeartrateSupport != false {
        try visitor.visitSingularBoolField(value: _storage._appListHeartrateSupport, fieldNumber: 8)
      }
      if _storage._appListSleepSupport != false {
        try visitor.visitSingularBoolField(value: _storage._appListSleepSupport, fieldNumber: 9)
      }
      if _storage._appListStressSupport != false {
        try visitor.visitSingularBoolField(value: _storage._appListStressSupport, fieldNumber: 10)
      }
      if _storage._appListMenstruationSupport != false {
        try visitor.visitSingularBoolField(value: _storage._appListMenstruationSupport, fieldNumber: 11)
      }
      if _storage._appListBreatheSupport != false {
        try visitor.visitSingularBoolField(value: _storage._appListBreatheSupport, fieldNumber: 12)
      }
      if _storage._appListAlarmsSupport != false {
        try visitor.visitSingularBoolField(value: _storage._appListAlarmsSupport, fieldNumber: 13)
      }
      if _storage._appListPhoneSupport != false {
        try visitor.visitSingularBoolField(value: _storage._appListPhoneSupport, fieldNumber: 14)
      }
      if _storage._appListTimersSupport != false {
        try visitor.visitSingularBoolField(value: _storage._appListTimersSupport, fieldNumber: 15)
      }
      if _storage._appListStopwatchSupport != false {
        try visitor.visitSingularBoolField(value: _storage._appListStopwatchSupport, fieldNumber: 16)
      }
      if _storage._appListSpo2Support != false {
        try visitor.visitSingularBoolField(value: _storage._appListSpo2Support, fieldNumber: 17)
      }
      if _storage._appListWeatherSupport != false {
        try visitor.visitSingularBoolField(value: _storage._appListWeatherSupport, fieldNumber: 18)
      }
      if _storage._appListCameraRemoteSupport != false {
        try visitor.visitSingularBoolField(value: _storage._appListCameraRemoteSupport, fieldNumber: 19)
      }
      if _storage._appListMusicSupport != false {
        try visitor.visitSingularBoolField(value: _storage._appListMusicSupport, fieldNumber: 20)
      }
      if _storage._appListFindPhoneSupport != false {
        try visitor.visitSingularBoolField(value: _storage._appListFindPhoneSupport, fieldNumber: 21)
      }
      if _storage._appListWorldClockSupport != false {
        try visitor.visitSingularBoolField(value: _storage._appListWorldClockSupport, fieldNumber: 22)
      }
      if _storage._appListSettingsSupport != false {
        try visitor.visitSingularBoolField(value: _storage._appListSettingsSupport, fieldNumber: 23)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: protocol_app_list_inquire_reply, rhs: protocol_app_list_inquire_reply) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._operate != rhs_storage._operate {return false}
        if _storage._funcTable != rhs_storage._funcTable {return false}
        if _storage._supportShowNum != rhs_storage._supportShowNum {return false}
        if _storage._list != rhs_storage._list {return false}
        if _storage._appListActivitySupport != rhs_storage._appListActivitySupport {return false}
        if _storage._appListWorkoutSupport != rhs_storage._appListWorkoutSupport {return false}
        if _storage._appListStepsSupport != rhs_storage._appListStepsSupport {return false}
        if _storage._appListHeartrateSupport != rhs_storage._appListHeartrateSupport {return false}
        if _storage._appListSleepSupport != rhs_storage._appListSleepSupport {return false}
        if _storage._appListStressSupport != rhs_storage._appListStressSupport {return false}
        if _storage._appListMenstruationSupport != rhs_storage._appListMenstruationSupport {return false}
        if _storage._appListBreatheSupport != rhs_storage._appListBreatheSupport {return false}
        if _storage._appListAlarmsSupport != rhs_storage._appListAlarmsSupport {return false}
        if _storage._appListPhoneSupport != rhs_storage._appListPhoneSupport {return false}
        if _storage._appListTimersSupport != rhs_storage._appListTimersSupport {return false}
        if _storage._appListStopwatchSupport != rhs_storage._appListStopwatchSupport {return false}
        if _storage._appListSpo2Support != rhs_storage._appListSpo2Support {return false}
        if _storage._appListWeatherSupport != rhs_storage._appListWeatherSupport {return false}
        if _storage._appListCameraRemoteSupport != rhs_storage._appListCameraRemoteSupport {return false}
        if _storage._appListMusicSupport != rhs_storage._appListMusicSupport {return false}
        if _storage._appListFindPhoneSupport != rhs_storage._appListFindPhoneSupport {return false}
        if _storage._appListWorldClockSupport != rhs_storage._appListWorldClockSupport {return false}
        if _storage._appListSettingsSupport != rhs_storage._appListSettingsSupport {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
